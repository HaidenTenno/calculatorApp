//
//  RoundButtonItem.swift
//  calculatorApp
//
//  Created by –ü–µ—Ç—Ä –¢–∞—Ä—Ç—ã–Ω—Å–∫–∏—Ö on 16.10.2019.
//  Copyright ¬© 2019 –ü–µ—Ç—Ä –¢–∞—Ä—Ç—ã–Ω—Å–∫–∏—Ö . All rights reserved.
//

import Foundation

/// –¢–∏–ø—ã –∫—Ä—É–≥–ª—ã—Ö –∫–Ω–æ–ø–æ–∫
enum RoundButtonType: CaseIterable {
    case number
    case operation
    case mode
}

/// –ü—Ä–æ—Ç–æ–∫–æ–ª –∫—Ä—É–≥–ª–æ–π –∫–Ω–æ–ø–∫–∏
protocol RoundButtonItem {
    var type: RoundButtonType { get }
}

// MARK: –ö–ª–∞—Å—Å—ã –¥–ª—è –∫—Ä—É–≥–ª—ã—Ö –∫–Ω–æ–ø–æ–∫ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤
/// –ö—Ä—É–≥–ª–∞—è –∫–Ω–æ–ø–∫–∞ —á–∏—Å–ª–∞
class RoundButtonNumberItem: RoundButtonItem {
    var type: RoundButtonType = .number
    var value: RoundButtonNumericValue
    
    init(value: RoundButtonNumericValue) {
        self.value = value
    }
}

/// –ö—Ä—É–≥–ª–∞—è –∫–Ω–æ–ø–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏
class RoundButtonOperationItem: RoundButtonItem {
    var type: RoundButtonType = .operation
    var value: RoundButtonOperationValue
    var selected: Bool = false
    
    init(value: RoundButtonOperationValue) {
        self.value = value
    }
}

/// –ö—Ä—É–≥–ª–∞—è –∫–Ω–æ–ø–∫–∞ —Ä–µ–∂–∏–º–∞
class RoundButtonModeItem: RoundButtonItem {
    var type: RoundButtonType = .mode
    var value: RoundButtonModeValue
    var selected: Bool = false
    
    init(value: RoundButtonModeValue) {
        self.value = value
    }
}

// MARK: –ü–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∫—Ä—É–≥–ª—ã—Ö –∫–Ω–æ–ø–æ–∫ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤
/// –ó–Ω–∞—á–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ —á–∏—Å–µ–ª
enum RoundButtonNumericValue: String, CaseIterable {
    case one = "1"
    case two = "2"
    case three = "3"
    case four = "4"
    case five = "5"
    case six = "6"
    case seven = "7"
    case eight = "8"
    case nine = "9"
    case zero = "0"
    case dot = "."
    case pi = "ùõë"
    
    /**
     - important
     –°–≤–æ–π—Å—Ç–≤–æ `stringValue` –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –¥—Ä–æ–±–Ω–æ–π —á–∞—Å—Ç–∏ –≤ —Ä–∞–∑–Ω—ã—Ö Locale
     */
    var stringValue: String {
        switch self {
        case .dot:
            return Locale.current.decimalSeparator ?? self.rawValue
        default:
            return self.rawValue
        }
    }
}

/// –ó–Ω–∞—á–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ —á–∏—Å–ª–∞
enum RoundButtonOperationValue: String, CaseIterable {
    case clear = "AC"
    case changeSign = "¬±"
    case plus = "+"
    case minus = "-"
    case multiplication = "√ó"
    case division = "√∑"
    case power = "^"
    case sqrt = "‚àö"
    case log = "log"
    case sin = "sin"
    case cos = "cos"
    case tan = "tan"
    case execute = "="
    
    var stringValue: String {
        return self.rawValue
    }
}

/// –ó–Ω–∞—á–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ —Ä–µ–∂–∏–º–∞
enum RoundButtonModeValue: String, CaseIterable {
    case deg = "Deg"
    case rad = "Rad"
    
    var stringValue: String {
        return self.rawValue
    }
}
